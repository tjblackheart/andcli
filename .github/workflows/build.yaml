name: Build

on:
  push:
    tags: [v*]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: extractions/setup-just@v3

    - uses: actions/setup-go@v5
      with:
        go-version: "1.24"
        check-latest: true
        cache: true

    - name: Download modules
      run: go mod download

    - name: Test
      run: make test

    - name: Build linux_amd64
      env:
        CI_TAG: ${{ github.ref_name }}
        GOOS: linux
        GOARCH: amd64
        RELEASE: ${{ github.ref_name }}_linux_amd64
      run: just ci

    - name: Build linux_aarch64
      env:
        CI_TAG: ${{ github.ref_name }}
        GOOS: linux
        GOARCH: arm64
        RELEASE: ${{ github.ref_name }}_linux_aarch64
      run: just ci

    - name: Build darwin_amd64
      env:
        CI_TAG: ${{ github.ref_name }}
        GOOS: darwin
        GOARCH: amd64
        RELEASE: ${{ github.ref_name }}_darwin_amd64
      run: make ci

    - name: Build darwin_arm64
      env:
        CI_TAG: ${{ github.ref_name }}
        GOOS: darwin
        GOARCH: arm64
        RELEASE: ${{ github.ref_name }}_darwin_arm64
      run: make ci

    - name: Build windows
      env:
        CI_TAG: ${{ github.ref_name }}
        GOOS: windows
        GOARCH: amd64
        RELEASE: ${{ github.ref_name }}_win_amd64.exe
      run: make ci

    - name: Build windows
      env:
        CI_TAG: ${{ github.ref_name }}
        GOOS: windows
        GOARCH: arm64
        RELEASE: ${{ github.ref_name }}_win_arm64.exe
      run: make ci

    - name: Build android
      env:
        CI_TAG: ${{ github.ref_name }}
        GOOS: android
        GOARCH: arm64
        RELEASE: ${{ github.ref_name }}_android_arm64
      run: make ci

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "builds/*"
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        allowUpdates: true
